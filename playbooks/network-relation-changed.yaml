---
# Cache the fact data for later config updates outside of the relationship context
# If we modify docker defaults later, the data is lost without it being cached.

- name: Set Status to ready
  shell: "status-set maintenance 'Configuring network'"


- name: Receive Relationship Data subnet
  shell: relation-get flannel-subnet
  register: flannel_subnet

- name: Receive Relationship Data mtu
  shell: relation-get flannel-mtu
  register: flannel_mtu

- set_fact:
    flannel_mtu: "{{ flannel_mtu.stdout }}"
    flannel_subnet: "{{ flannel_subnet.stdout }}"

- name: Cache network subnet
  shell: echo "{{ flannel_subnet }} >> .flannel_subnet"
  args:
    chdir: "{{ charm_dir }}"
    creates: .flannel-subnet

- name: Cache network mtu
  shell: echo "{{ flannel_mtu }} >> .flannel-mtu"
  args:
    chdir: "{{ charm_dir }}"
    creates: .flannel-mtu

- name: set subnet daemon option
  docker_opts: action=set key=bip val="{{ flannel_subnet }}" yaml="{{opts_yaml}}"
  when: flannel_subnet != ''
  notify:
    - calculate docker opts
    - render docker defaults

- name: set subnet daemon option
  docker_opts: action=set key=mtu val="{{ flannel_mtu }}" yaml="{{opts_yaml}}"
  when: flannel_mtu != ''
  notify:
    - calculate docker opts
    - render docker defaults

- name: Set Status to ready
  shell: "status-set maintenance 'Recycling Docker'"

- name: Halt docker service
  service: name={{docker_version_name}} state=stopped

- name: Bring Docker Bridge offline
  shell: ifconfig docker0 down
  ignore_errors: yes

- name: Delete Docker Bridge
  shell: brctl delbr docker0
  ignore_errors: yes
  notify:
    - restart docker

# This is a little shifty, as we cannot garantee we have recycled docker here
# but i like setting it here better than in site.yaml as if we dont have data
# we should set status to blocked...
- name: Set Status to ready
  shell: "status-set active ''"
  when: flannel_mtu != ''

- name: Set Status to ready
  shell: "status-set blocked 'Waiting on data from networking charm'"
  when: flannel_mtu == ''

